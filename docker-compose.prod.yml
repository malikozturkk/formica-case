version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - formica_network
    restart: always

  frontend:
    build:
      context: ./frontend
      target: production
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"
    networks:
      - formica_network
    restart: always

  backend:
    build:
      context: ./backend
      target: production
    environment:
      - NODE_ENV=production
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?schema=public
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "yarn prisma migrate deploy && yarn start:prod"
    networks:
      - formica_network
    restart: always

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - formica_network
    restart: always

volumes:
  postgres_data: 

networks:
  formica_network:
    driver: bridge